{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\QAtester\\\\regression-ui\\\\src\\\\components\\\\TestReport.js\",\n  _s = $RefreshSig$();\n// src/components/TestReport.js\nimport React, { useEffect, useState } from 'react';\nimport { getTestReport } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestReport = () => {\n  _s();\n  const [report, setReport] = useState(null);\n  useEffect(() => {\n    async function fetchReport() {\n      const data = await getTestReport();\n      setReport(data);\n    }\n    fetchReport();\n  }, []);\n  if (!report) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading report...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Passed: \", report.passed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Failed: \", report.failed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Failed Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: report.details.failedTests.map((test, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [test.testName, \" - \", test.error, test.screenshot && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/screenshots/${test.screenshot}`,\n          target: \"_blank\",\n          children: \"View Screenshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TestReport, \"uThrKXSG04i7dx6XISsv8ngoHQ0=\");\n_c = TestReport;\nexport default TestReport;\nvar _c;\n$RefreshReg$(_c, \"TestReport\");","map":{"version":3,"names":["React","useEffect","useState","getTestReport","jsxDEV","_jsxDEV","TestReport","_s","report","setReport","fetchReport","data","children","fileName","_jsxFileName","lineNumber","columnNumber","passed","failed","details","failedTests","map","test","index","testName","error","screenshot","href","target","_c","$RefreshReg$"],"sources":["C:/Users/akash/QAtester/regression-ui/src/components/TestReport.js"],"sourcesContent":["// src/components/TestReport.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTestReport } from '../api';\r\n\r\nconst TestReport = () => {\r\n  const [report, setReport] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchReport() {\r\n      const data = await getTestReport();\r\n      setReport(data);\r\n    }\r\n\r\n    fetchReport();\r\n  }, []);\r\n\r\n  if (!report) {\r\n    return <div>Loading report...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Report</h2>\r\n      <p>Passed: {report.passed}</p>\r\n      <p>Failed: {report.failed}</p>\r\n      <h3>Failed Tests</h3>\r\n      <ul>\r\n        {report.details.failedTests.map((test, index) => (\r\n          <li key={index}>\r\n            {test.testName} - {test.error}\r\n            {test.screenshot && <a href={`/screenshots/${test.screenshot}`} target=\"_blank\">View Screenshot</a>}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestReport;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,eAAeS,WAAWA,CAAA,EAAG;MAC3B,MAAMC,IAAI,GAAG,MAAMR,aAAa,CAAC,CAAC;MAClCM,SAAS,CAACE,IAAI,CAAC;IACjB;IAEAD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,MAAM,EAAE;IACX,oBAAOH,OAAA;MAAAO,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACEX,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBX,OAAA;MAAAO,QAAA,GAAG,UAAQ,EAACJ,MAAM,CAACS,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BX,OAAA;MAAAO,QAAA,GAAG,UAAQ,EAACJ,MAAM,CAACU,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BX,OAAA;MAAAO,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBX,OAAA;MAAAO,QAAA,EACGJ,MAAM,CAACW,OAAO,CAACC,WAAW,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1ClB,OAAA;QAAAO,QAAA,GACGU,IAAI,CAACE,QAAQ,EAAC,KAAG,EAACF,IAAI,CAACG,KAAK,EAC5BH,IAAI,CAACI,UAAU,iBAAIrB,OAAA;UAAGsB,IAAI,EAAE,gBAAgBL,IAAI,CAACI,UAAU,EAAG;UAACE,MAAM,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAF5FO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACT,EAAA,CAhCID,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}